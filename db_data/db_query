-- Create user_role table
CREATE TABLE user_role (
    id SERIAL PRIMARY KEY,
    name TEXT
);

-- Create admin_role table
CREATE TABLE admin_role (
    id SERIAL PRIMARY KEY,
    name TEXT
);

-- Create school_user table
CREATE TABLE school_user (
    id SERIAL PRIMARY KEY,
    name TEXT,
    phone_number TEXT,
    address TEXT,
    gender TEXT,
    email TEXT,
    profile_picture TEXT,
    user_role_id INT REFERENCES user_role(id)
);

-- Create admin table
CREATE TABLE admin (
    user_id INT PRIMARY KEY REFERENCES school_user(id),
    specialization TEXT,
    hire_date DATE,
    admin_role_id INT REFERENCES admin_role(id)
);

-- Create instructor table
CREATE TABLE instructor (
    user_id INT PRIMARY KEY REFERENCES school_user(id),
    date_of_birth DATE,
    specialization TEXT,
    hire_date DATE
);

-- Create grade table
CREATE TABLE grade (
    id SERIAL PRIMARY KEY,
    name TEXT
);

-- Create class table
CREATE TABLE class (
    id SERIAL PRIMARY KEY,
    name TEXT,
    grade_id INT REFERENCES grade(id)
);

-- Create subject table
CREATE TABLE subject (
    id SERIAL PRIMARY KEY,
    name TEXT,
    total_marks INT,
    grade_id INT REFERENCES grade(id)
);
-- Create student table
CREATE TABLE student (
    user_id INT PRIMARY KEY REFERENCES school_user(id),
    guardians_phone_number TEXT,
    payment_status TEXT,
    class_id INT REFERENCES class(id)
);

-- Create instructor_assignment table
CREATE TABLE instructor_assignment (
    id SERIAL PRIMARY KEY,
    name TEXT,
    instructor_id INT REFERENCES instructor(user_id),
    subject_id INT REFERENCES subject(id),
    class_id INT REFERENCES class(id)
);

-- Create weekly_timetable table
CREATE TABLE weekly_timetable (
    id SERIAL PRIMARY KEY,
    name TEXT,
    term TEXT,
    class_id INT REFERENCES class(id),
    grade_id INT REFERENCES grade(id)
);

-- Create weekly_sessions table
CREATE TABLE weekly_sessions (
    id SERIAL PRIMARY KEY,
    name TEXT,
    session_number INT,
    weekday TEXT,
    start_time TIME,
    end_time TIME,
    session_interval INT,
    instructor_assignment_id INT REFERENCES instructor_assignment(id),
    weekly_timetable_id INT REFERENCES weekly_timetable(id)
);

-- Create exam_type table
CREATE TABLE exam_type (
    id SERIAL PRIMARY KEY,
    name TEXT,
    marks_percent FLOAT
);

-- Create exam table
CREATE TABLE exam (
    id SERIAL PRIMARY KEY,
    name TEXT,
    date_time TIMESTAMP,
    subject_id INT REFERENCES subject(id),
    exam_type_id INT REFERENCES exam_type(id)
);

-- Create exam_timetable table
CREATE TABLE exam_timetable (
    id SERIAL PRIMARY KEY,
    name TEXT,
    term TEXT,
    grade_id INT REFERENCES grade(id),
    exam_id INT REFERENCES exam(id)
);

-- Create exam_session table
CREATE TABLE exam_session (
    id SERIAL PRIMARY KEY,
    name TEXT,
    session_number INT,
    weekday TEXT,
    start_time TIME,
    end_time TIME,
    session_interval INT,
    instructor_id INT REFERENCES instructor(user_id),
    exam_timetable_id INT REFERENCES exam_timetable(id)
);

-- Create homework table
CREATE TABLE homework (
    id SERIAL PRIMARY KEY,
    name TEXT,
    date DATE,
    content TEXT,
    instructor_assignment_id INT REFERENCES instructor_assignment(id)
);

-- Create news table
CREATE TABLE news (
    id SERIAL PRIMARY KEY,
    name TEXT,
    thumbnail TEXT,
    date_time TIMESTAMP,
    description TEXT
);


